This is an entity component system framework for writing games. It is written in dart because it is for writing stuff in the browser. I recently did some rewriting and now it uses component mappers and stuff like Artemis, and the entities themselves are now simply ints, so they can be easily transmitted across a websocket. There's now a ClientWorld and a ServerWorld class that I may end up merging again.

Genenerally you use it like this:
World world = new World();
world.register_system(new WhateverSystem(world));
// ... more register_system calls
world.globaldata['something'] = data // eg canvas element
// this part is not as well-thought-out as i'd like

and then you do world.run()

the systems run in the order they are registered.

in your WhateverSystems that you've implemented and imported, you subscribe for events and stuff inside System.initialize() rather than the constructor because the world object might not be set up, or you might need to use some global data that's not available until after other systems have initialized. 

entities are then created by the systems, and they get passed to the systems based on which components they want to look at.
